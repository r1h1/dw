--CREO TABLA ROL
CREATE TABLE LA_ROL (
ROL_ID INT NOT NULL,
ROL_NOMBRE VARCHAR(50) NOT NULL,
CONSTRAINT LA_ROL PRIMARY KEY (ROL_ID)
);

--CODIGO QUE HACE EL PRIMARY KEY AUTO INCREMENTABLE (SE HACE UNA POR TABLA)
CREATE SEQUENCE AUTOINCREMENTABLE_ROL
--INICIA EN 1
START WITH 1
--ICREMENTA 1
INCREMENT BY 1;

INSERT INTO LA_ROL VALUES (AUTOINCREMENTABLE_ROL.nextval, 'ADMINISTRADOR');
INSERT INTO LA_ROL VALUES (AUTOINCREMENTABLE_ROL.nextval, 'CLIENTE');

SELECT * FROM LA_ROL;



--CREO TABLA USUARIOS
CREATE TABLE LA_Usuario(
    ID_Usu_NumeroDocumento INT PRIMARY KEY NOT NULL,
    Usu_NombreCompleto VARCHAR(100) NOT NULL,
    Usu_TipoDoc VARCHAR(15) NOT NULL,
    Usu_TelefonoResidencial INT NOT NULL,
    Usu_TelefonoMovil INT NOT NULL,
    Dir_ID INT,
    Usu_Direccion VARCHAR(250) NOT NULL,
    Usu_Email VARCHAR(70) NOT NULL,
    Rol_ID INT,
    Usu_Estado INT   
);


--PROCEDIMIENTO INSERTAR CLIENTE (INSERT)
CREATE OR REPLACE PROCEDURE INSERTA_USUARIO
(
    ID_Usu_NumeroDocumento INT, 
    Usu_NombreCompleto VARCHAR,
    Usu_TipoDoc VARCHAR, 
    Usu_TelefonoResidencial INT, 
    Usu_TelefonoMovil INT, 
    Dir_ID INT, 
    Usu_Direccion VARCHAR, 
    Usu_Email VARCHAR, 
    Rol_ID INT, 
    Usu_Estado INT
)
AS 
BEGIN
    INSERT INTO LA_Usuario VALUES(ID_Usu_NumeroDocumento, Usu_NombreCompleto,
    Usu_TipoDoc, Usu_TelefonoResidencial, Usu_TelefonoMovil, Dir_ID, Usu_Direccion, Usu_Email, Rol_ID, Usu_Estado);
END;




--PROCEDURE PARA ACTUALIZAR DATOS DEL CLIENTE (UPDATE)
CREATE OR REPLACE PROCEDURE UPDATE_CLIENTE
(
    id_usuario IN INT, 
    nombreCompleto IN VARCHAR,
    tipoDoc IN VARCHAR,
    telefonoResidencial IN NUMBER,
    telefonoMovil IN NUMBER,
    dirID IN INT,
    direccion IN VARCHAR,
    email IN VARCHAR,
    rolID IN INT,
    usuEstado IN INT
)
AS
BEGIN
    UPDATE la_usuario SET usu_nombrecompleto = nombreCompleto, usu_tipodoc = tipoDoc, usu_telefonoresidencial = telefonoResidencial, usu_telefonomovil = telefonoMovil,
    dir_id = dirID, usu_direccion = direccion, usu_email = email, rol_id = rolID, usu_estado = usuEstado
    WHERE ID_Usu_NumeroDocumento = id_usuario;
END;



--PROCEDURE PARA BORRAR UN CLIENTE POR ID (DELETE WHERE ID)
CREATE OR REPLACE PROCEDURE DELETE_CLIENTE
(
    id_usuario int
)
AS
BEGIN
    DELETE LA_Usuario WHERE id_usu_numerodocumento = id_usuario;
END;


--PROCEDIMIENTO PARA MOSTRAR CLEINTES
CREATE OR REPLACE PROCEDURE MOSTRAR_CLIENTES
(
    registros out sys_refcursor
)
AS
BEGIN
    OPEN registros FOR SELECT ID_USU_NUMERODOCUMENTO AS Numero_Documento, USU_NOMBRECOMPLETO AS Nombre_Completo, 
                              USU_TIPODOC AS Tipo_Documento, USU_TELEFONORESIDENCIAL AS Telefono_Residencial, 
                              USU_TELEFONOMOVIL AS Telefono_Movil, USU_DIRECCION AS Direccion, USU_EMAIL AS Email 
                              FROM LA_Usuario;
END;



--CREO TABLA PRODUCTO
CREATE TABLE LA_PRODUCTO(
PRO_ID INT NOT NULL,
PRO_NOMBRE VARCHAR(50) NOT NULL,
PRO_DESCRIPCION VARCHAR(50) NOT NULL,
PRO_MATERIAL VARCHAR(50) NOT NULL,
DPRO_PRECIO INT NOT NULL,
DPRO_EXISTENCIA INT NOT NULL,
PRO_TIPO VARCHAR(50) NOT NULL,--INTERIOR EXTERIOR
PRO_ESTADO INT NOT NULL,--1 ACTIVO /0 INACTIVO}
CONSTRAINT LA_PRODUCTO PRIMARY KEY (PRO_ID)
);

--CODIGO QUE HACE EL PRIMARY KEY AUTO INCREMENTABLE (SE HACE UNA POR TABLA)
CREATE SEQUENCE AUTOINCREMENTABLE_PRODUCTO
--INICIA EN 1
START WITH 1
--ICREMENTA 1
INCREMENT BY 1;

--PROCEDIMIENTO INSERTAR PRODUCTO
CREATE OR REPLACE PROCEDURE INSERTA_PRODUCTO
(PRO_NOMBRE VARCHAR(50), PRO_DESCRIPCION VARCHAR(50), PRO_MATERIAL VARCHAR(50), DIM_ID INT, BOD_ID INT, DPRO_PRECIO INT, DPRO_EXISTENCIA INT, PRO_TIPO VARCHAR(50), PRO_ESTADO INT)
AS 
BEGIN
INSERT INTO LA_PRODUCTO VALUES (AUTOINCREMENTABLE_PRODUCTO.nextval,PRO_NOMBRE, PRO_DESCRIPCION, PRO_MATERIAL, DIM_ID, BOD_ID, DPRO_PRECIO, DPRO_EXISTENCIA, PRO_TIPO, PRO_ESTADO);
END;

--PROCEDIMIENTO EDITAR PRODUCTO
CREATE OR REPLACE PROCEDURE EDITAR_ENCABEZADO_DOCUMENTO
(PRO_ID IN INT , PRO_NOMBRE IN VARCHAR(50), PRO_DESCRIPCION IN VARCHAR(50), PRO_MATERIAL IN VARCHAR(50), DIM_ID IN INT, BOD_ID IN INT, DPRO_PRECIO IN INT, 
DPRO_EXISTENCIA IN INT, PRO_TIPO IN VARCHAR(50), PRO_ESTADO IN INT)
 AS 
BEGIN
update LA_PRODUCTO set PRO_NOMBRE = PRO_NOMBRE, PRO_DESCRIPCION = PRO_DESCRIPCION, PRO_MATERIAL = PRO_MATERIAL, DIM_ID = DIM_ID, 
BOD_ID = BOD_ID, DPRO_PRECIO = DPRO_PRECIO, DPRO_EXISTENCIA = DPRO_EXISTENCIA, PRO_TIPO = PRO_TIPO, PRO_ESTADO = PRO_ESTADO WHERE  PRO_ID = PRO_ID ;
END;

--PROCEDURE PARA BORRAR UN PRODUCTO POR ID
CREATE OR REPLACE PROCEDURE DELETE_PRODUCTO
(
    PRO_ID IN INT
)
AS
BEGIN
    DELETE LA_PRODUCTO WHERE PRO_ID = PRO_ID;
END;

EXECUTE INSERTA_PRODUCTO ('MESA', 'MESA DE CAOBA', 'Madera', 2, 1, 500, 3, 'INTERIOR', 1)
EXECUTE INSERTA_PRODUCTO ('silla', 'silla de mtela', 'Metal', 1, 1, 200, 3, 'EXTERIOR', 1)



--NOTA
--PARA EL SIGUIENTE PASO LO IMPORTANTE ES QUE TU USUARIO TENGA PERMISOS DBA
---CREO TABLA DE IMAGENES
CREATE TABLE LA_IMAGENES(
IMG_ID INT,
IMGEN BLOB DEFAULT EMPTY_BLOB()
);

--CREO UN DIRECTORIO
-- ESTE DEBE SER CREADO CON EL  NOMBRE IMAGENES PROYECTO EN EL ESCRITORIO, LUEGO COPIA LA RUTA
CREATE OR REPLACE DIRECTORY IMAGENES AS 'C:\Users\USUARIO\Desktop\IMAGENES PROYECTO';

--INICIA INGRESO

DECLARE 
V_TEMP BLOB;
V_BFILE BFILE;
V_NOMBRE_FOTO VARCHAR (20);
BEGIN

-- CREO EL INSERT
INSERT INTO LA_IMAGENES VALUES (2, EMPTY_BLOB()) RETURNING FOTO INTO V_TEMP;

V_NOMBRE_FOTO := '1.PNG';

V_BFILE := BFILENAME('OBJETOS_LOB', V_NOMBRE_FOTO);
DBMS_LOB.OPEN(V_BFILE, DBMS_LOB.LOB_READONLY);
DBMS_LOB.LOADFROMFILE(V_TEMP, V_BFILE, DBMS_LOB.GETLENGTH(V_BFILE));
DBMS_LOB.CLOSE(V_BFILE);
COMMIT;
END;





/*
    Sentencias DROP para borrar las tablas y procedimientos
*/

DROP TABLE LA_Usuario;
DROP PROCEDURE INSERTA_USUARIO;
DROP PROCEDURE UPDATE_CLIENTE;
DROP PROCEDURE SELECT_CLIENTE;
DROP PROCEDURE DELETE_CLIENTE;


